# $all is shorthand for $username$hostname$localip$shlvl$singularity$kubernetes
#                       $directory$vcsh$fossil_branch$fossil_metrics$git_branch
#                       $git_commit$git_state$git_metrics$git_status$hg_branch
#                       $pijul_channel$docker_context$package$bun$c$cmake$cobol
#                       $daml$dart$deno$dotnet$elixir$elm$erlang$fennel$golang
#                       $gradle$haskell$haxe$helm$java$julia$kotlin$lua$nim$nodejs
#                       $ocaml$opa$perl$php$pulumi$purescript$python$raku$rlang$red
#                       $ruby$rust$scala$solidity$swift$terraform$typst$vlang$vagrant
#                       $zig$buf$guix_shell$nix_shell$conda$meson$spack$memory_usage
#                       $aws$gcloud$openstack$azure$direnv$env_var$crystal$custom$sudo
#                       $cmd_duration$line_break$jobs$battery$time$status$container$os$shell$character

"$schema" = "https://starship.rs/config-schema.json"
format = """
$username$hostname$localip$shlvl$singularity$kubernetes\
$directory$vcsh$fossil_branch$fossil_metrics$git_branch\
$git_commit$git_state$git_metrics$git_status$hg_branch\
$pijul_channel$docker_context$package$bun$c$cmake$cobol\
$daml$dart$deno$dotnet$elixir$elm$erlang$fennel$golang\
$gradle$haskell$haxe$helm$java$julia$kotlin$lua$nim$nodejs\
$ocaml$opa$perl$php$pulumi$purescript$python$raku$rlang$red\
$ruby$rust$scala$solidity$swift$terraform$typst$vlang$vagrant\
$zig$buf$guix_shell$nix_shell$conda$meson$spack$memory_usage\
$aws$gcloud$openstack$azure$direnv$env_var$crystal$custom$sudo\
$cmd_duration$line_break$jobs$battery$time$status$container$os$shell$character
"""
right_format = ""
continuation_prompt = "[∙](bright-black) "
scan_timeout = 30
command_timeout = 500
add_newline = false
follow_symlinks = true

[username]
format = "[$user@]($style)"
style_root = "red bold"
style_user = "bold #23D18B"
show_always = true
disabled = false

[hostname]
ssh_only = false
ssh_symbol = "🌐 "
trim_at = "."
detect_env_vars = []
format = "[$ssh_symbol$hostname]($style):"
style = "bold #23D18B"
disabled = false

[directory]
truncation_length = 8
truncate_to_repo = false
fish_style_pwd_dir_length = 0
use_logical_path = true
format = "[$path]($style)[$read_only]($read_only_style)"
repo_root_format = "[$before_root_path]($before_repo_root_style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style)"
style = "blue bold"
disabled = false
read_only = "🔒"
read_only_style = "red"
truncation_symbol = ""
home_symbol = "~"
use_os_path_sep = true
[directory.substitutions]

[git_branch]
format = '[ ➜  \($symbol$branch(:origin/$remote_branch)\)]($style)'
symbol = ""
style = "italic bold purple"
truncation_length = 9223372036854775807
truncation_symbol = "…"
only_attached = false
always_show_remote = false
ignore_branches = []
disabled = false

[git_commit]
commit_hash_length = 7
format = '[\($hash$tag\)]($style) '
style = "green bold"
only_detached = true
disabled = false
tag_symbol = " 🏷  "
tag_disabled = true
tag_max_candidates = 0

[git_metrics]
added_style = "bold green"
deleted_style = "bold red"
only_nonzero_diffs = true
format = "([+$added]($added_style) )([-$deleted]($deleted_style) )"
disabled = true
ignore_submodules = false

[git_state]
rebase = "REBASING"
merge = "MERGING"
revert = "REVERTING"
cherry_pick = "CHERRY-PICKING"
bisect = "BISECTING"
am = "AM"
am_or_rebase = "AM/REBASE"
style = "bold yellow"
format = '\([$state( $progress_current/$progress_total)]($style)\) '
disabled = false

[git_status]
format = '([ - \[$all_status$ahead_behind\]]($style))'
style = "bold purple"
stashed = 'S'
ahead = "⇡"
behind = "⇣"
up_to_date = ""
diverged = "⇕"
conflicted = "="
deleted = "D"
renamed = "R"
modified = "M"
staged = "+"
untracked = "U"
typechanged = ""
ignore_submodules = false
disabled = false

[cmd_duration]
min_time = 2000
format = " ⏱ [$duration]($style)"
style = "bold #fcbe03"
show_milliseconds = false
disabled = false
show_notifications = false
min_time_to_notify = 45000

[localip]
ssh_only = true
format = "[$localipv4]($style) "
style = "yellow bold"
disabled = false

# success_symbol = '[➜](bold green)'
[character]
format = "$symbol "
success_symbol = "[❯](bold #23D18B)"
error_symbol = "[❯](bold red)"
vimcmd_symbol = "[❮](bold #23D18B)"
vimcmd_visual_symbol = "[❮](bold yellow)"
vimcmd_replace_symbol = "[❮](bold purple)"
vimcmd_replace_one_symbol = "[❮](bold purple)"
disabled = false

[package]
format = "[ | $symbol$version]($style)"
symbol = "📦 "
style = "208 bold"
display_private = false
disabled = false
version_format = "v${raw}"

[palettes]

[profiles]

#########################################
[python]
pyenv_version_name = false
pyenv_prefix = "pyenv "
python_binary = [
    "python",
    "python3",
    "python2",
]
format = ' | [\(${symbol}${pyenv_prefix}(${version})(\($virtualenv\))\)]($style)'
version_format = "v${raw}"
style = "yellow bold"
symbol = "🐍 "
disabled = false
detect_extensions = ["py"]
detect_files = [
    "requirements.txt",
    ".python-version",
    "pyproject.toml",
    "Pipfile",
    "tox.ini",
    "setup.py",
    "__init__.py",
]
detect_folders = []

[conda]
truncation_length = 1
format = "via [$symbol$environment]($style) "
symbol = "🅒 "
style = "green bold"
ignore_base = true
disabled = false

####################################################################################
[docker_context]
symbol = "🐳 "
style = "blue bold"
format = "via [$symbol$context]($style) "
only_with_files = true
disabled = false
detect_extensions = []
detect_files = [
    "docker-compose.yml",
    "docker-compose.yaml",
    "compose.yml",
    "compose.yaml",
    "*Dockerfile",
]
detect_folders = []

[container]
format = '[$symbol \[$name\]]($style) '
symbol = "⬢"
style = "red bold dimmed"
disabled = false

[helm]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "⎈ "
style = "bold white"
disabled = false
detect_extensions = []
detect_files = [
    "helmfile.yaml",
    "Chart.yaml",
]
detect_folders = []

[kubernetes]
symbol = "☸ "
format = '[$symbol$context( \($namespace\))]($style) in '
style = "cyan bold"
disabled = true
detect_extensions = []
detect_files = []
detect_folders = []
contexts = []

[kubernetes.context_aliases]

[kubernetes.user_aliases]

####################################################################################
[aws]
format = ' | [$symbol($profile )(\($region\) )(\[$duration\] )]($style)'
symbol = "☁️ "
style = "bold yellow"
disabled = true
expiration_symbol = "X"
force_display = false

[aws.region_aliases]

[aws.profile_aliases]

[terraform]
format = " | [$symbol$workspace]($style) "
version_format = "v${raw}"
symbol = "💠 "
style = "bold 105"
disabled = true
detect_extensions = [
    "tf",
    "tfplan",
    "tfstate",
    "tfvars"
]
detect_files = []
detect_folders = [".terraform"]

####################################################################################
[c]
format = "via [$symbol($version(-$name) )]($style)"
version_format = "v${raw}"
style = "149 bold"
symbol = "C "
disabled = false
detect_extensions = [
    "c",
    "h",
]
detect_files = []
detect_folders = []
commands = [
    [
    "cc",
    "--version",
],
    [
    "gcc",
    "--version",
],
    [
    "clang",
    "--version",
],
]

[cmake]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "△ "
style = "bold blue"
disabled = false
detect_extensions = []
detect_files = [
    "CMakeLists.txt",
    "CMakeCache.txt",
]
detect_folders = []

####################################################################################
[java]
disabled = false
format = "[ | $symbol($version )]($style)"
version_format = "v${raw}"
style = "red dimmed"
symbol = "☕ "
detect_extensions = [
    "java",
    "class",
    "jar",
    "gradle",
    "clj",
    "cljc",
]
detect_files = [
    "pom.xml",
    "build.gradle.kts",
    "build.sbt",
    ".java-version",
    "deps.edn",
    "project.clj",
    "build.boot",
    ".sdkmanrc",
]
detect_folders = []

####################################################################################
[direnv]
format = "[$symbol$loaded/$allowed]($style) "
symbol = "direnv "
style = "bold orange"
disabled = true
detect_extensions = []
detect_files = [".envrc"]
detect_folders = []
allowed_msg = "allowed"
denied_msg = "denied"
loaded_msg = "loaded"
unloaded_msg = "not loaded"


[line_break]
disabled = false


[memory_usage]
threshold = 0
format = " $symbol [$ram]($style)"
style = "white bold dimmed"
symbol = "|"
disabled = true

[os]
format = "[$symbol]($style)"
style = "bold cyan"
disabled = true

[os.symbols]
Alpaquita = "🔔 "
Alpine = "🏔️ "
Amazon = "🙂 "
Android = "🤖 "
Arch = "🎗️ "
Artix = "🎗️ "
CentOS = "💠 "
Debian = "🌀 "
DragonFly = "🐉 "
Emscripten = "🔗 "
EndeavourOS = "🚀 "
Fedora = "🎩 "
FreeBSD = "😈 "
Garuda = "🦅 "
Gentoo = "🗜️ "
HardenedBSD = "🛡️ "
Illumos = "🐦 "
Linux = "🐧 "
Mabox = "📦 "
Macos = "🍎 "
Manjaro = "🥭 "
Mariner = "🌊 "
MidnightBSD = "🌘 "
Mint = "🌿 "
NetBSD = "🚩 "
NixOS = "❄️ "
OpenBSD = "🐡 "
OpenCloudOS = "☁️ "
openEuler = "🦉 "
openSUSE = "🦎 "
OracleLinux = "🦴 "
Pop = "🍭 "
Raspbian = "🍓 "
Redhat = "🎩 "
RedHatEnterprise = "🎩 "
Redox = "🧪 "
Solus = "⛵ "
SUSE = "🦎 "
Ubuntu = "Ubuntu "
Unknown = "❓ "
Windows = "🪟 "

[shell]
format = "[$indicator]($style) "
bash_indicator = "bash"
fish_indicator = "fsh"
zsh_indicator = "zsh"
powershell_indicator = "psh"
ion_indicator = "ion"
elvish_indicator = "esh"
tcsh_indicator = "tsh"
nu_indicator = "nu"
xonsh_indicator = "xsh"
cmd_indicator = "cmd"
unknown_indicator = ""
style = "cyan bold"
disabled = true

[sudo]
format = "[ as $symbol]($style)"
symbol = "sudo"
style = "red bold dimmed"
allow_windows = false
disabled = false

[time]
format = "[$time]($style) "
style = "bold cyan"
use_12hr = false
disabled = false
utc_time_offset = "local"
time_range = "-"

[zig]
format = "via [$symbol($version )]($style)"
version_format = "v${raw}"
symbol = "↯ "
style = "bold yellow"
disabled = false
detect_extensions = ["zig"]
detect_files = []
detect_folders = []
